// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LongitudinalValuesInfo 设备纵向比较曲线图
//
// swagger:model LongitudinalValuesInfo
type LongitudinalValuesInfo struct {

	// 纵向比较均差列表
	AverageDeviationItems []*LongitudinalValues `json:"averageDeviationItems"`

	// 纵向比较变化率列表
	ChangeRateItems []*LongitudinalValues `json:"changeRateItems"`

	// 属性名称
	// Required: true
	FieldName *string `json:"fieldName"`

	// 属性单位
	// Required: true
	FieldUnit *string `json:"fieldUnit"`

	// 智能告警列表
	IntelligenceAlarmItems []*LongitudinalIntelAlarmInfo `json:"intelligenceAlarmItems"`

	// 纵向比较数值列表
	NumericalValueItems []*LongitudinalValues `json:"numericalValueItems"`
}

// Validate validates this longitudinal values info
func (m *LongitudinalValuesInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAverageDeviationItems(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateChangeRateItems(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFieldName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFieldUnit(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIntelligenceAlarmItems(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumericalValueItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LongitudinalValuesInfo) validateAverageDeviationItems(formats strfmt.Registry) error {

	if swag.IsZero(m.AverageDeviationItems) { // not required
		return nil
	}

	for i := 0; i < len(m.AverageDeviationItems); i++ {
		if swag.IsZero(m.AverageDeviationItems[i]) { // not required
			continue
		}

		if m.AverageDeviationItems[i] != nil {
			if err := m.AverageDeviationItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("averageDeviationItems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LongitudinalValuesInfo) validateChangeRateItems(formats strfmt.Registry) error {

	if swag.IsZero(m.ChangeRateItems) { // not required
		return nil
	}

	for i := 0; i < len(m.ChangeRateItems); i++ {
		if swag.IsZero(m.ChangeRateItems[i]) { // not required
			continue
		}

		if m.ChangeRateItems[i] != nil {
			if err := m.ChangeRateItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("changeRateItems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LongitudinalValuesInfo) validateFieldName(formats strfmt.Registry) error {

	if err := validate.Required("fieldName", "body", m.FieldName); err != nil {
		return err
	}

	return nil
}

func (m *LongitudinalValuesInfo) validateFieldUnit(formats strfmt.Registry) error {

	if err := validate.Required("fieldUnit", "body", m.FieldUnit); err != nil {
		return err
	}

	return nil
}

func (m *LongitudinalValuesInfo) validateIntelligenceAlarmItems(formats strfmt.Registry) error {

	if swag.IsZero(m.IntelligenceAlarmItems) { // not required
		return nil
	}

	for i := 0; i < len(m.IntelligenceAlarmItems); i++ {
		if swag.IsZero(m.IntelligenceAlarmItems[i]) { // not required
			continue
		}

		if m.IntelligenceAlarmItems[i] != nil {
			if err := m.IntelligenceAlarmItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("intelligenceAlarmItems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LongitudinalValuesInfo) validateNumericalValueItems(formats strfmt.Registry) error {

	if swag.IsZero(m.NumericalValueItems) { // not required
		return nil
	}

	for i := 0; i < len(m.NumericalValueItems); i++ {
		if swag.IsZero(m.NumericalValueItems[i]) { // not required
			continue
		}

		if m.NumericalValueItems[i] != nil {
			if err := m.NumericalValueItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("numericalValueItems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LongitudinalValuesInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LongitudinalValuesInfo) UnmarshalBinary(b []byte) error {
	var res LongitudinalValuesInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
