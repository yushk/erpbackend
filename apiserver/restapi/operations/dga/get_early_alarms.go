// Code generated by go-swagger; DO NOT EDIT.

package dga

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetEarlyAlarmsHandlerFunc turns a function with the right signature into a get early alarms handler
type GetEarlyAlarmsHandlerFunc func(GetEarlyAlarmsParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn GetEarlyAlarmsHandlerFunc) Handle(params GetEarlyAlarmsParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// GetEarlyAlarmsHandler interface for that can handle valid get early alarms params
type GetEarlyAlarmsHandler interface {
	Handle(GetEarlyAlarmsParams, interface{}) middleware.Responder
}

// NewGetEarlyAlarms creates a new http.Handler for the get early alarms operation
func NewGetEarlyAlarms(ctx *middleware.Context, handler GetEarlyAlarmsHandler) *GetEarlyAlarms {
	return &GetEarlyAlarms{Context: ctx, Handler: handler}
}

/*GetEarlyAlarms swagger:route GET /v1/alarms/early dga getEarlyAlarms

获取油中溶解预警列表

获取油中溶解预警列表

*/
type GetEarlyAlarms struct {
	Context *middleware.Context
	Handler GetEarlyAlarmsHandler
}

func (o *GetEarlyAlarms) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetEarlyAlarmsParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
